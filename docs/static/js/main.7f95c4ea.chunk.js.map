{"version":3,"sources":["context/ThemeContext.js","components/Header.jsx","components/Search.jsx","components/hooks/useCharacter.js","components/Characters.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","Header","color","useContext","className","style","Search","search","searchInput","handleSearch","type","value","ref","onChange","useCharacters","url","useState","characters","setCharacters","useEffect","fetch","then","response","json","data","results","initialState","favorites","favoriteReducer","state","action","payload","Characaters","useReducer","dispatch","setSearch","useRef","useCallback","current","filterUsers","useMemo","filter","user","name","toLowerCase","includes","map","favorite","gender","id","src","image","alt","species","origin","onClick","App","darkMode","setDarkMode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"uNAIeA,EAFMC,IAAMC,cAAc,M,OCS1BC,EARA,WACb,IAAMC,EAAQC,qBAAWL,GACzB,OACE,qBAAKM,UAAU,SAAf,SACE,oBAAIC,MAAO,CAACH,SAAZ,4B,cCQSI,EAbA,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACE,qBAAKL,UAAU,SAAf,SACE,uBACEM,KAAK,OACLC,MAAOJ,EACPK,IAAKJ,EACLK,SAAUJ,OCIHK,EAXO,SAACC,GAAS,IAAD,EACSC,mBAAS,IADlB,mBACrBC,EADqB,KACTC,EADS,KAQ7B,OALAC,qBAAU,WACRC,MAAML,GACHM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUN,EAAcM,EAAKC,cACpC,CAACV,IACGE,GCAHS,EAAe,CACpBC,UAAW,IAKNC,EAAkB,SAACC,EAAOC,GAC/B,OAAQA,EAAOpB,MACd,IAAK,kBACJ,OAAO,2BACHmB,GADJ,IAECF,UAAU,GAAD,mBAAME,EAAMF,WAAZ,CAAuBG,EAAOC,YAEzC,QACC,OAAOF,IAyDKG,EArDK,WAAO,IAAD,EACKC,qBAAWL,EAAiBF,GADjC,mBAClBC,EADkB,KACPO,EADO,OAEGlB,mBAAS,IAFZ,mBAElBT,EAFkB,KAEV4B,EAFU,KAGnB3B,EAAc4B,iBAAO,MAErBnB,EAAaH,EAnBR,8CAqBLL,EAAe4B,uBAAY,WAChCF,EAAU3B,EAAY8B,QAAQ3B,SAC5B,IAMG4B,EAAcC,mBACnB,kBACCvB,EAAWwB,QAAO,SAACC,GAClB,OAAOA,EAAKC,KAAKC,cAAcC,SAAStC,EAAOqC,oBAEjD,CAAC3B,EAAYV,IAGd,OACC,sBAAKH,UAAU,aAAf,UACEuB,EAAUA,UAAUmB,KAAI,SAACC,GAAD,OACxB,+BACEA,EAASJ,KADX,IACkBI,EAASC,OAAQ,MAD1BD,EAASE,OAInB,cAAC,EAAD,CACC1C,OAAQA,EACRC,YAAaA,EACbC,aAAcA,IAEd8B,EAAYO,KAAI,SAAC7B,GAAD,OAChB,sBAAKb,UAAU,YAAf,UACC,6BAAKa,EAAW0B,OAChB,mCACC,qBAAKO,IAAKjC,EAAWkC,MAAOC,IAAKnC,EAAWoC,UAC5C,uCACC,yCAAYpC,EAAW+B,UACvB,yCAAY/B,EAAWqC,OAAOX,cAGhC,wBAAQjC,KAAK,SAAS6C,QAAS,WAjClCrB,EAAS,CAAExB,KAAM,kBAAmBqB,QAiCgBd,KAAjD,mCAT+BA,EAAW0B,a,MC1ChCa,MAlBf,WAAgB,IAAD,EACmBxC,oBAAS,GAD5B,mBACNyC,EADM,KACIC,EADJ,KAKb,OACE,sBAAKtD,UAAS,cAAUqD,EAAW,YAAc,cAAjD,UACE,cAAC,EAAD,IACA,8BACE,wBAAQ/C,KAAK,SAAS6C,QAPR,WAClBG,GAAaD,IAMT,SACIA,EAAW,sBAAwB,yBAGzC,cAAC,EAAD,QCLSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAaC,SAAd,CAAuB3D,MAAM,MAA7B,SACE,cAAC,EAAD,QAGJ4D,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7f95c4ea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ThemeContext = React.createContext(null);\r\n\r\nexport default ThemeContext;","import React, { useContext } from 'react';\r\nimport ThemeContext from '../context/ThemeContext';\r\n\r\nconst Header = () => {\r\n  const color = useContext(ThemeContext);\r\n  return (\r\n    <div className=\"Header\">\r\n      <h1 style={{color}}>React hooks</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;","import React from \"react\";\r\n\r\nconst Search = ({ search, searchInput, handleSearch }) => {\r\n  return (\r\n    <div className=\"Search\">\r\n      <input\r\n        type=\"text\"\r\n        value={search}\r\n        ref={searchInput}\r\n        onChange={handleSearch}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useCharacters = (url) => {\r\n  const [ characters, setCharacters ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => setCharacters(data.results));\r\n  }, [url]);\r\n  return characters;\r\n}\r\n\r\nexport default useCharacters;","import React, {\r\n\tuseState,\r\n\tuseReducer,\r\n\tuseMemo,\r\n\tuseRef,\r\n\tuseCallback,\r\n} from \"react\";\r\nimport Search from \"./Search\";\r\nimport useCharacters from \"./hooks/useCharacter\";\r\n\r\nconst initialState = {\r\n\tfavorites: [],\r\n};\r\n\r\nconst API = \"https://rickandmortyapi.com/api/character/\";\r\n\r\nconst favoriteReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"ADD_TO_FAVORITE\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfavorites: [...state.favorites, action.payload],\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst Characaters = () => {\r\n\tconst [favorites, dispatch] = useReducer(favoriteReducer, initialState);\r\n\tconst [search, setSearch] = useState(\"\");\r\n\tconst searchInput = useRef(null);\r\n\r\n\tconst characters = useCharacters(API);\r\n\r\n\tconst handleSearch = useCallback(() => {\r\n\t\tsetSearch(searchInput.current.value);\r\n\t}, []);\r\n\r\n\tconst handleClick = (favorite) => {\r\n\t\tdispatch({ type: \"ADD_TO_FAVORITE\", payload: favorite });\r\n\t};\r\n\r\n\tconst filterUsers = useMemo(\r\n\t\t() =>\r\n\t\t\tcharacters.filter((user) => {\r\n\t\t\t\treturn user.name.toLowerCase().includes(search.toLowerCase());\r\n\t\t\t}),\r\n\t\t[characters, search]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"Characters\">\r\n\t\t\t{favorites.favorites.map((favorite) => (\r\n\t\t\t\t<li key={favorite.id}>\r\n\t\t\t\t\t{favorite.name} {favorite.gender}{\" \"}\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t\t<Search\r\n\t\t\t\tsearch={search}\r\n\t\t\t\tsearchInput={searchInput}\r\n\t\t\t\thandleSearch={handleSearch}\r\n\t\t\t/>\r\n\t\t\t{filterUsers.map((characters) => (\r\n\t\t\t\t<div className=\"Character\" key={characters.name}>\r\n\t\t\t\t\t<h2>{characters.name}</h2>\r\n\t\t\t\t\t<figure>\r\n\t\t\t\t\t\t<img src={characters.image} alt={characters.species} />\r\n\t\t\t\t\t\t<figcaption>\r\n\t\t\t\t\t\t\t<p>Gender: {characters.gender}</p>\r\n\t\t\t\t\t\t\t<p>Origin: {characters.origin.name}</p>\r\n\t\t\t\t\t\t</figcaption>\r\n\t\t\t\t\t</figure>\r\n\t\t\t\t\t<button type=\"button\" onClick={() => handleClick(characters)}>\r\n\t\t\t\t\t\tAgregar a favoritos\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Characaters;\r\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Character from './components/Characters';\nimport './App.css';\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const handleClick = () =>{\n    setDarkMode(!darkMode);\n  }\n  return (\n    <div className={ `App ${darkMode ? 'dark-mode' : 'light-mode'}`}>\n      <Header />\n      <div>\n        <button type=\"button\" onClick={handleClick}>\n          { darkMode ? 'Change to LightMode' : 'Change to DarkMode' }\n        </button>\n      </div>\n      <Character />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeContext from './context/ThemeContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeContext.Provider value=\"red\">\n      <App />\n    </ThemeContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}